// Disable gradle compile/test for this project so Maven can handle it
sourceSets {
    main.java.srcDirs = []
    main.resources.srcDirs = []
    test.java.srcDirs = []
    test.resources.srcDirs = []
}

task runMvnCompile(type:Exec) {
  environment System.getProperties()
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    executable "cmd"
    args '/c', 'mvn', "clean", 'compile', '-DprojectVersion=' + version
  } else {
    executable "mvn"
    args 'clean', 'compile', '-DprojectVersion=' + version
  }
}

task runMvnVerify(type:Exec) {
  shouldRunAfter runMvnCompile
  environment System.getProperties()
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    executable "cmd"
    args '/c', 'mvn', "clean", 'verify', '-DprojectVersion=' + version
  } else {
    executable "mvn"
    args 'clean', 'verify', '-DprojectVersion=' + version
  }
}

task deleteTarget(type: Delete) {
  delete 'target', 'bin', 'build'
}

compileJava.dependsOn ':microshed-testing-testcontainers:publishToMavenLocal'
assemble.dependsOn runMvnCompile
test.dependsOn runMvnVerify
clean.dependsOn deleteTarget

// Always re-run tests on every build for the sake of this sample
// In a real project, this setting would not be desirable
test.outputs.upToDateWhen { false } 
